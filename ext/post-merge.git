#!/usr/bin/env ruby

require 'rubygems'
require 'mysql'
require 'puppet'
require 'puppet/face'
require 'puppet/cloudpack'
require 'parseconfig'
require 'fileutils'


class PostMerge
  attr_accessor :state, :config

  def initialize
    @config_file = '/etc/cloudscale.conf'
    @cache_dir = '/var/cache/cloudscale'

    begin
      @dbh = Mysql.new host='localhost', user='autoami', password='autoami'
    rescue => e
      raise "Cannot connect to database: #{e}"
    end
    
    @nodes = Array.new
  end

  def add_node(server, group)
    @nodes << { 'dns_name' => server, 'group' => group }
  end

  def save
    @nodes.each do |props|
      dbh.select_db('autoami').query("INSERT INTO nodes ( dns_name, ami_group ) VALUES ( #{props['dns_name']}, #{props['group']}")
    end
  end

  def load_instances
    config.groups.each do |group|
      g_config = config.params[group]

      options = { :image   => g_config['image'],
                  :type    => g_config['type'],
                  :keyname => g_config['keyname'],
                  :keyfile => g_config['keyfile'],
                  :login   => g_config['login'],
                  :server  => g_config['master'],
      }

      options[:region] = g_config.has_key?('region') ? g_config['region'] : 'us-east-1'

      #Fire up instance from AMI
      server = Puppet::Face[:node_aws, :current].create :region => options[:region],
        :keyname => options[:keyname],
        :image   => options[:image],
        :type    => options[:type]

      options[:puppetagent_certname] = server

      Puppet::Face[:node_aws, :current].install(server, {
        :keyfile => options[:keyfile],
        :server  => options[:server],
        :login   => options[:login],
        :install_script => 'cloudscale',
        :puppetagent_certname => options[:puppetagent_certname] }
      )

      puts server
      add_node server
    end
  end
end

pm = PostMerge.new
pm.load_instances
pm.save
